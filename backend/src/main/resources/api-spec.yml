openapi: 3.0.0
info:
  title: Session API
  version: 1.0.0
paths:
  /sessions:
    get:
      summary: Get all sessions
      operationId: getAllSessions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionResponse'
    post:
      summary: Create a new session
      operationId: createSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Players'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
  /sessions/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Session ID
        schema:
          type: string
    get:
      summary: Get session by ID
      operationId: getSessionById
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '404':
          description: Not Found
  /statistics:
    post:
      summary: Create user statistic
      operationId: createStatistic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Statistic'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistic'
  /statistics/{userId}:
    get:
      summary: Get user statistics by ID
      operationId: getStatistics
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistic'
        '404':
          description: Not Found
  /statistics/leaderboard:
    get:
      summary: Get leaderboard
      operationId: getLeaderboard
      parameters:
        - name: limit
          in: query
          required: false
          description: Number of top users to retrieve (default is 10)
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderboardItem'
    post:
      summary: Create leaderboard item
      operationId: createLeaderboardItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaderboardItem'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardItem'

components:
  schemas:
    JoinSessionRequest:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
    JoinSessionResponse:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
    SessionRequest:
      type: object
      properties:
        id:
          type: string
    SessionResponse:
      type: object
      properties:
        id:
          type: string
        chain:
          type: integer
        players:
          type: integer
    Players:
      type: object
      required:
        - players
      properties:
        players:
          type: integer
    UserJoinRequest:
      type: object
      properties:
        userId:
          type: string
    ProgressUpdateRequest:
      type: object
      properties:
        userId:
          type: string
        progress:
          type: integer
    ProgressUpdateResponse:
      type: object
      properties:
        userId:
          type: string
        progress:
          type: integer
    Statistic:
      type: object
      properties:
        userId:
          type: string
        completedDuels:
          type: integer
        averageSpeed:
          type: number
          format: double
        totalReward:
          type: integer
        overallWinsInDuels:
          type: integer
        maxSpeed:
          type: number
          format: double
        topSpeeds:
          type: array
          items:
            type: number
            format: double
    LeaderboardItem:
      type: object
      properties:
        userId:
          type: string
        speed:
          type: number
          format: double
